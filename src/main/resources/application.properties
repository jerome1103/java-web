# 設置端口
server.port=8080

# 當前專案類型
#spring.profiles.active=dev

# 設定視圖解析器的前後綴
#spring.mvc.view.prefix=/WEB-INF/
#spring.mvc.view.suffix=.jsp

# 開啟input的hidden欄位中的解析器(PUT、DELETE解析)
spring.mvc.hiddenmethod.filter.enabled=true

# 不隱藏Error部分訊息(application.properties)
server.error.include-exception=true
server.error.include-message=always

# 時間格式
spring.gson.date-format=yyyy/MM/dd
# 定義i18n檔名
spring.messages.basename=i18n.login

## 資料庫

## 資料庫目標
spring.datasource.url=jdbc:mysql://localhost:3306/mmsweb
## 資料庫登入驗證的帳號
spring.datasource.username=tester
## 資料庫登入密碼
spring.datasource.password=P@ssw0rd
## 選定org.mariadb.jdbc.Driver作為連接資料庫的Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto = update

# Hibernate對資料表的操作，none表示不動作
#spring.jpa.hibernate.ddl-auto=none

# 是否開啟H2
#spring.h2.console.enabled=true

## 日誌

# 日誌輸出等級
#logging.level.tw.jerome.web=info
# 日誌文件路徑
#logging.file.path=/spring/log
# 控制台日誌輸出格式
#logging.pattern.console=%d{yyyy-MM-dd HH:MM:ss.SSS} === [%thread] %-5level %logger{50} -%msg%n
# 文件日誌輸出格式
#logging.pattern.file=%d{yyyy-MM-dd HH:MM:ss.SSS} [%thread] %-5level %logger{50} -%msg%n

## 框架

# Thymeleaf
# 是否啟動緩存
spring.thymeleaf.cache=false

# OpenAI
springdoc.swagger-ui.path=/